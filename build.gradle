plugins {
    id 'java'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'application'
    id 'jacoco'
}

mainClassName = 'spleetwaise.commons.Main'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

checkstyle {
    toolVersion = '10.2'
}

tasks.register('guiTests', Test) {
    useJUnitPlatform()
    include 'systemtests/**'
    enableAssertions = true
}

tasks.register('nonGuiTests', Test) {
    useJUnitPlatform()
    include 'spleetwaise/address/**'
    include 'spleetwaise/common/**'
    include 'spleetwaise/transaction/**'
    enableAssertions = true
}

tasks.register('allTests') {
    dependsOn nonGuiTests, guiTests
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

    systemProperty 'testfx.setup.timeout', '60000'
    systemProperty 'java.awt.headless', 'true'
    systemProperty 'prism.order', 'sw'
    systemProperty 'prism.text', 't2k'
    enableAssertions = true

    exclude 'systemtests/**'
}

tasks.register('coverage', JacocoReport) {
    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)
    classDirectories.from files(sourceSets.main.output)
    executionData.from files(jacocoTestReport.executionData)
    classDirectories.setFrom(files(classDirectories.files.collect {
        fileTree(dir: it, exclude: ['**/*.jar'])
    }))
    reports {
        html.required = true
        xml.required = true
    }
}

dependencies {
    String jUnitVersion = '5.4.0'
    String javaFxVersion = '17.0.7'

    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'linux'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.7.4'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: jUnitVersion

    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: jUnitVersion

    testImplementation "org.testfx:testfx-core:4.0.18"
    testImplementation "org.testfx:testfx-junit5:4.0.18"
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.1'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.13.2'

    testImplementation "org.mockito:mockito-core:5.14.2"
    testImplementation 'org.mockito:mockito-junit-jupiter:5.14.2' // Add Mockito JUnit 5 integration
}

shadowJar {
    archiveBaseName = "spleetwaise"
    archiveVersion = "1.6.0"
    archiveClassifier = null
}

run {
    enableAssertions = true
}

defaultTasks 'clean', 'nonGuiTests', 'coverage'
