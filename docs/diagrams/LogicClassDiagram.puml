@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic as LogicPackage {

package "Parser Classes" as ParserClasses{
}

Class XYZCommand
Class CommandResult
Class "{abstract}\nCommand" as Command

Class "<<interface>>\nLogic" as Logic
Class LogicManager
}

package Model {
Class HiddenModel #FFFFFF
}

package Storage {
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .up.|> Logic
LogicManager -down->"1" ParserClasses
ParserClasses .down.> XYZCommand : <<create>>
XYZCommand -down-|> Command
LogicManager .right.> Command : <<call>>

LogicManager -left-> Model
LogicManager -right-> Storage

Storage--[hidden] Model
Command .left.> Model
note right of XYZCommand: XYZCommand = AddCommand, \nViewSupplierCommand, etc

Logic .right.> CommandResult
LogicManager .right.> CommandResult
Command .up.> CommandResult : <<create>>
@enduml
