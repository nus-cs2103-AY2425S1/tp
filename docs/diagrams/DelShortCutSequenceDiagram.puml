@startuml
!include style.puml
skinparam ArrowFontStyle plain
skinparam arrowThickness 1.1

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DelShortCutCommandParser" as DelShortCutCommandParser LOGIC_COLOR
participant "d:DelShortCutCommand" as DelShortCutCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
participant "t:Tag" as Tag MODEL_COLOR
end box

[-> LogicManager : execute("delShortCut al/v tn/Vegan")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("delShortCut al/v tn/Vegan")
activate AddressBookParser

create DelShortCutCommandParser
AddressBookParser -> DelShortCutCommandParser : parse("al/v tn/Vegan")
activate DelShortCutCommandParser

create DelShortCutCommand
DelShortCutCommandParser -> DelShortCutCommand : new DelShortCutCommand("v", "Vegan")
activate DelShortCutCommand

DelShortCutCommand --> DelShortCutCommandParser
deactivate DelShortCutCommand

DelShortCutCommandParser --> AddressBookParser : d
deactivate DelShortCutCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser

LogicManager -> DelShortCutCommand : execute(m)
activate DelShortCutCommand

alt Shortcut exists
    DelShortCutCommand -> Model : hasShortCut(toRemove)
    activate Model
    Model --> DelShortCutCommand : true
    deactivate Model

    DelShortCutCommand -> Model : removeShortCut(toRemove)
    activate Model

    DelShortCutCommand -> Tag : updateShortCutMappings(m)
    activate Tag
    Tag --> DelShortCutCommand
    deactivate Tag

    Model --> DelShortCutCommand
    deactivate Model

    create CommandResult
    DelShortCutCommand -> CommandResult : new CommandResult("Shortcut Deleted: v")
    activate CommandResult

    CommandResult --> DelShortCutCommand
    deactivate CommandResult

else Shortcut does not exist
    DelShortCutCommand -> Model : hasShortCut(toRemove)
    activate Model
    Model --> DelShortCutCommand : false
    deactivate Model

    DelShortCutCommand -> LogicManager : throw CommandException(MESSAGE_SHORTCUT_NOT_FOUND)
end

DelShortCutCommand --> LogicManager : r
deactivate DelShortCutCommand

[<-- LogicManager
deactivate LogicManager
@enduml
