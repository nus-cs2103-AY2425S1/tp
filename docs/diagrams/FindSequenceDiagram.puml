@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":FindCommandParser" as FindCommandParser LOGIC_COLOR
participant "<<class>>\nArgumentMultimap" as ArgumentMultimap LOGIC_COLOR
participant "a:ArgumentMultimap" as ArgMultimap LOGIC_COLOR
participant "f:FindCommand" as FindCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
participant "<<class>>\nPredicateContainer" as PredicateContainer LOGIC_COLOR
participant "p:PredicateContainer" as PredContainer LOGIC_COLOR
end box

[-> LogicManager : execute("find all n/John")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("find all n/John")
activate AddressBookParser

create FindCommandParser
AddressBookParser -> FindCommandParser : FindCommandParser()
activate FindCommandParser

FindCommandParser --> AddressBookParser
deactivate FindCommandParser

AddressBookParser -> FindCommandParser : parse("all n/John")
activate FindCommandParser

FindCommandParser -> ArgumentMultimap : tokenize()
activate ArgumentMultimap

ArgumentMultimap -> ArgumentMultimap : extractArguments()
activate ArgumentMultimap

create ArgMultimap
ArgumentMultimap -> ArgMultimap : ArgumentMultimap()

activate ArgMultimap
ArgMultimap --> ArgumentMultimap
deactivate ArgMultimap

ArgumentMultimap --> ArgumentMultimap : a
deactivate ArgumentMultimap

ArgumentMultimap --> FindCommandParser : a
deactivate ArgumentMultimap

FindCommandParser -> PredicateContainer : extractFromArgumentMultimap(a)
activate PredicateContainer

create PredContainer
PredicateContainer -> PredContainer : PredicateContainer()
activate PredContainer

PredContainer --> PredicateContainer
deactivate PredContainer

PredicateContainer --> FindCommandParser : p
deactivate PredicateContainer

create FindCommand
FindCommandParser -> FindCommand : FindCommand(p)
activate FindCommand

FindCommand --> FindCommandParser :
deactivate FindCommand

FindCommandParser --> AddressBookParser : f
deactivate FindCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
FindCommandParser -[hidden]-> AddressBookParser
destroy FindCommandParser

AddressBookParser --> LogicManager : f
deactivate AddressBookParser

LogicManager -> FindCommand : execute(m)
activate FindCommand

FindCommand -> Model : updateFilteredPersonList()
activate Model

Model --> FindCommand
deactivate Model

create CommandResult
FindCommand -> CommandResult : CommandResult()
activate CommandResult

CommandResult --> FindCommand
deactivate CommandResult

FindCommand --> LogicManager : r
deactivate FindCommand

[<--LogicManager
deactivate LogicManager
@enduml
