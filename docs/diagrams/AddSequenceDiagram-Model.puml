@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":AddCommand" as AddCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":ModelManager" as ModelManager MODEL_COLOR
participant ":AddressBook" as AddressBook MODEL_COLOR
participant ":UniqueStudentList" as UniqueStudentList MODEL_COLOR
end box

activate AddCommand
AddCommand -> ModelManager : hasStudent(student)
activate ModelManager

ModelManager -> AddressBook : hasStudent(student)
activate AddressBook


AddressBook -> UniqueStudentList : contains(student)
activate UniqueStudentList

UniqueStudentList --> AddressBook : Whether student exists
deactivate UniqueStudentList

AddressBook --> ModelManager : Whether student exists
deactivate AddressBook

AddCommand <-- ModelManager : Whether student exists
deactivate ModelManager

group opt[hasStudent is false]
    AddCommand -> ModelManager : addStudent(student)
    activate ModelManager

    ModelManager -> AddressBook : addStudent(student)
    activate AddressBook

    AddressBook -> UniqueStudentList : add(student)
    activate UniqueStudentList

'    AddCommand <-- Model
    deactivate UniqueStudentList
    deactivate AddressBook
    deactivate ModelManager

    AddCommand -> ModelManager : getClashingStudents(student)
    activate ModelManager

    ModelManager -> AddressBook : getClashingStudents(student)
    activate AddressBook

    AddressBook -> UniqueStudentList : getClashingStudents(student)
    activate UniqueStudentList

    UniqueStudentList --> AddressBook : List of clashing students
    deactivate UniqueStudentList

    AddressBook --> ModelManager : List of clashing students
    deactivate AddressBook

    AddCommand <-- ModelManager : List of clashing students
    deactivate ModelManager
end


@enduml
